version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: portfolio-backend
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
    env_file:
      - ./Backend/.env
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./Backend:/app
      - /app/node_modules

  # Frontend Service
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: portfolio-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://backend:5001
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Service (optional - uncomment if needed)
  # mongodb:
  #   image: mongo:7.0
  #   container_name: portfolio-mongodb
  #   restart: unless-stopped
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=securepassword
  #     - MONGO_INITDB_DATABASE=portfolio
  #   volumes:
  #     - mongodb_data:/data/db
  #     - mongodb_config:/data/configdb
  #   networks:
  #     - portfolio-network

  # Nginx Reverse Proxy (optional - for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: portfolio-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - portfolio-network

networks:
  portfolio-network:
    driver: bridge

# volumes:
#   mongodb_data:
#   mongodb_config:
